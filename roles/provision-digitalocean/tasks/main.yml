---
- name: Create new Droplets
  community.digitalocean.digital_ocean_droplet:
    state: present
    oauth_token: "{{ digitalocean_api_key }}"
    name: "{{ digitalocean_hostname }}"
    unique_name: true
    size: "{{ digitalocean_size }}"
    region: "{{ digitalocean_region }}"
    image: "{{ digitalocean_image }}"
    ipv6: true
    wait_timeout: 500
    project: "{{ digitalocean_project }}"
    ssh_keys: "{{ digitalocean_ssh_keys }}"
  throttle: 3
  register: droplet_info

- name: Show Droplet info
  debug:
    msg: |
      Droplet ID is {{ droplet_info.data.droplet.id }}
      First Public IPv6 is {{ (droplet_info.data.droplet.networks.v6 | selectattr('type', 'equalto', 'public')).0.ip_address }}
      First Public IPv4 is {{ (droplet_info.data.droplet.networks.v4 | selectattr('type', 'equalto', 'public')).0.ip_address }}
      First Private IPv4 is {{ (droplet_info.data.droplet.networks.v4 | selectattr('type', 'equalto', 'private')).0.ip_address }}

- name: Error VM already exists
  fail: msg="The host {{ digitalocean_hostname }} already exists."
  when: (droplet_info.changed == false) and (digitalocean_check == true)

- name: Store IPv6 address
  set_fact:
    droplet_ipv6: "{{ (droplet_info.data.droplet.networks.v6 | selectattr('type', 'equalto', 'public')).0.ip_address }}"

- name: Store IPv4 address
  set_fact:
    droplet_ipv4: "{{ (droplet_info.data.droplet.networks.v4 | selectattr('type', 'equalto', 'public')).0.ip_address }}"

- name: Store droplet_id
  set_fact:
    droplet_id: "{{ droplet_info.data.droplet.id }}"

- name: Add AAAA record DNS hostname for droplets
  community.digitalocean.digital_ocean_domain_record:
    state: present
    oauth_token: "{{ digitalocean_api_key }}"
    domain: "{{ digitalocean_domain }}"
    type: AAAA
    ttl: "{{ digitalocean_dns_record_ttl }}"
    name: "{{ digitalocean_dns_hostname }}"
    data: "{{ droplet_ipv6 }}"
    force_update: true
  throttle: 3
  when: digitalocean_dns | default(false) | bool

- name: Add A record DNS hostname for droplets
  community.digitalocean.digital_ocean_domain_record:
    state: present
    oauth_token: "{{ digitalocean_api_key }}"
    domain: "{{ digitalocean_domain }}"
    type: A
    ttl: "{{ digitalocean_dns_record_ttl }}"
    name: "{{ digitalocean_dns_hostname }}"
    data: "{{ droplet_ipv4 }}"
    force_update: true
  when: digitalocean_dns | default(false) | bool
  throttle: 3
- name: Add CNAME record DNS hostname for droplets
  community.digitalocean.digital_ocean_domain_record:
    state: present
    oauth_token: "{{ digitalocean_api_key }}"
    domain: "{{ digitalocean_domain }}"
    type: CNAME
    ttl: "{{ digitalocean_dns_record_ttl }}"
    name: "{{ item }}.{{ digitalocean_dns_hostname }}"
    data: "{{ digitalocean_dns_hostname }}"
    force_update: true
  with_items: "{{ digitalocean_cnames_list }}"
  when: (digitalocean_dns | default(false) | bool) and (digitalocean_cnames_list is defined)
  throttle: 3
- name: Wait for DNS to update
  ansible.builtin.pause:
    minutes: 1
  when: digitalocean_dns
